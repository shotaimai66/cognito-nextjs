{
  "version": "44.0.0",
  "artifacts": {
    "EcrStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "EcrStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "EcrStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://017522386375/ap-northeast-1",
      "properties": {
        "templateFile": "EcrStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-deploy-role-017522386375-ap-northeast-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-cfn-exec-role-017522386375-ap-northeast-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-017522386375-ap-northeast-1/bd22c645b72eb433cfac6103760604860ca9b8819084f8cd1aa305000c81f08d.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "EcrStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-lookup-role-017522386375-ap-northeast-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "EcrStack.assets"
      ],
      "metadata": {
        "/EcrStack/DjangoRepository/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoRepositoryC2C23DB6"
          }
        ],
        "/EcrStack/EcrRepositoryUri": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrRepositoryUri"
          }
        ],
        "/EcrStack/EcrRepositoryName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrRepositoryName"
          }
        ],
        "/EcrStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/EcrStack/Exports/Output{\"Fn::GetAtt\":[\"DjangoRepositoryC2C23DB6\",\"Arn\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttDjangoRepositoryC2C23DB6Arn96955558"
          }
        ],
        "/EcrStack/Exports/Output{\"Ref\":\"DjangoRepositoryC2C23DB6\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefDjangoRepositoryC2C23DB6D9EBE1D3"
          }
        ],
        "/EcrStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/EcrStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "EcrStack"
    },
    "VpcStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "VpcStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "VpcStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://017522386375/ap-northeast-1",
      "properties": {
        "templateFile": "VpcStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-deploy-role-017522386375-ap-northeast-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-cfn-exec-role-017522386375-ap-northeast-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-017522386375-ap-northeast-1/905c82eaa555e092053005f6b78373eeb06910f97dab6e094385604e004c94e5.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "VpcStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-lookup-role-017522386375-ap-northeast-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "VpcStack.assets"
      ],
      "metadata": {
        "/VpcStack/DjangoVpc/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcB951F8F6"
          }
        ],
        "/VpcStack/DjangoVpc/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPublicSubnet1SubnetCB930176"
          }
        ],
        "/VpcStack/DjangoVpc/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPublicSubnet1RouteTable61580FDD"
          }
        ],
        "/VpcStack/DjangoVpc/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPublicSubnet1RouteTableAssociation9DC25351"
          }
        ],
        "/VpcStack/DjangoVpc/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPublicSubnet1DefaultRoute115C89B3"
          }
        ],
        "/VpcStack/DjangoVpc/PublicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPublicSubnet1EIPE330294B"
          }
        ],
        "/VpcStack/DjangoVpc/PublicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPublicSubnet1NATGateway58FF065E"
          }
        ],
        "/VpcStack/DjangoVpc/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPublicSubnet2Subnet2911EA14"
          }
        ],
        "/VpcStack/DjangoVpc/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPublicSubnet2RouteTableD20CD085"
          }
        ],
        "/VpcStack/DjangoVpc/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPublicSubnet2RouteTableAssociationA79139D3"
          }
        ],
        "/VpcStack/DjangoVpc/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPublicSubnet2DefaultRoute54D99803"
          }
        ],
        "/VpcStack/DjangoVpc/PublicSubnet2/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPublicSubnet2EIP342CC473"
          }
        ],
        "/VpcStack/DjangoVpc/PublicSubnet2/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPublicSubnet2NATGatewayD09BCE38"
          }
        ],
        "/VpcStack/DjangoVpc/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPrivateSubnet1Subnet63EC1A79"
          }
        ],
        "/VpcStack/DjangoVpc/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPrivateSubnet1RouteTable919DAFE4"
          }
        ],
        "/VpcStack/DjangoVpc/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPrivateSubnet1RouteTableAssociation86EB1EF9"
          }
        ],
        "/VpcStack/DjangoVpc/PrivateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPrivateSubnet1DefaultRoute02F8D33F"
          }
        ],
        "/VpcStack/DjangoVpc/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPrivateSubnet2Subnet66EAD026"
          }
        ],
        "/VpcStack/DjangoVpc/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPrivateSubnet2RouteTableCB1F1FA7"
          }
        ],
        "/VpcStack/DjangoVpc/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPrivateSubnet2RouteTableAssociation7CBA549F"
          }
        ],
        "/VpcStack/DjangoVpc/PrivateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcPrivateSubnet2DefaultRoute4B72EB18"
          }
        ],
        "/VpcStack/DjangoVpc/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcIGW3039990F"
          }
        ],
        "/VpcStack/DjangoVpc/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcVPCGWFD304E8B"
          }
        ],
        "/VpcStack/DjangoVpc/S3Endpoint/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcS3Endpoint1A8F8526"
          }
        ],
        "/VpcStack/DjangoVpc/DynamoDbEndpoint/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoVpcDynamoDbEndpointEF6A1DE3"
          }
        ],
        "/VpcStack/AlbSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AlbSecurityGroup86A59E99"
          }
        ],
        "/VpcStack/EcsSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsSecurityGroup44008BF1"
          }
        ],
        "/VpcStack/EcsSecurityGroup/from VpcStackAlbSecurityGroupCE60AE76:8000": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsSecurityGroupfromVpcStackAlbSecurityGroupCE60AE768000C1E4A2E1"
          }
        ],
        "/VpcStack/VpcId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcId"
          }
        ],
        "/VpcStack/PrivateSubnetIds": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PrivateSubnetIds"
          }
        ],
        "/VpcStack/PublicSubnetIds": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublicSubnetIds"
          }
        ],
        "/VpcStack/EcsSecurityGroupId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsSecurityGroupId"
          }
        ],
        "/VpcStack/AlbSecurityGroupId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AlbSecurityGroupId"
          }
        ],
        "/VpcStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/VpcStack/Exports/Output{\"Fn::GetAtt\":[\"AlbSecurityGroup86A59E99\",\"GroupId\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttAlbSecurityGroup86A59E99GroupIdE3A37BC7"
          }
        ],
        "/VpcStack/Exports/Output{\"Ref\":\"DjangoVpcPublicSubnet1SubnetCB930176\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefDjangoVpcPublicSubnet1SubnetCB930176DF896231"
          }
        ],
        "/VpcStack/Exports/Output{\"Ref\":\"DjangoVpcPublicSubnet2Subnet2911EA14\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefDjangoVpcPublicSubnet2Subnet2911EA141A33161A"
          }
        ],
        "/VpcStack/Exports/Output{\"Ref\":\"DjangoVpcB951F8F6\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefDjangoVpcB951F8F6D6BAD311"
          }
        ],
        "/VpcStack/Exports/Output{\"Ref\":\"DjangoVpcPrivateSubnet1Subnet63EC1A79\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefDjangoVpcPrivateSubnet1Subnet63EC1A7941157CEC"
          }
        ],
        "/VpcStack/Exports/Output{\"Ref\":\"DjangoVpcPrivateSubnet2Subnet66EAD026\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefDjangoVpcPrivateSubnet2Subnet66EAD026C7AA239D"
          }
        ],
        "/VpcStack/Exports/Output{\"Fn::GetAtt\":[\"EcsSecurityGroup44008BF1\",\"GroupId\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttEcsSecurityGroup44008BF1GroupIdDE2CA5C5"
          }
        ],
        "/VpcStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/VpcStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "VpcStack"
    },
    "Route53Stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "Route53Stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "Route53Stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://017522386375/ap-northeast-1",
      "properties": {
        "templateFile": "Route53Stack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-deploy-role-017522386375-ap-northeast-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-cfn-exec-role-017522386375-ap-northeast-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-017522386375-ap-northeast-1/69f757ffb2ad44493251a2a721c9ba0bb6861f8fa45ad93be8f84f3072efa432.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "Route53Stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-lookup-role-017522386375-ap-northeast-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "Route53Stack.assets"
      ],
      "metadata": {
        "/Route53Stack/HostedZone/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HostedZoneDB99F866"
          }
        ],
        "/Route53Stack/Certificate/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Certificate4E7ABB08"
          }
        ],
        "/Route53Stack/NameServers": [
          {
            "type": "aws:cdk:logicalId",
            "data": "NameServers"
          }
        ],
        "/Route53Stack/DomainName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DomainName"
          }
        ],
        "/Route53Stack/HostedZoneId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HostedZoneId"
          }
        ],
        "/Route53Stack/CertificateArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CertificateArn"
          }
        ],
        "/Route53Stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/Route53Stack/Exports/Output{\"Ref\":\"Certificate4E7ABB08\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefCertificate4E7ABB08F7C8AF50"
          }
        ],
        "/Route53Stack/Exports/Output{\"Ref\":\"HostedZoneDB99F866\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefHostedZoneDB99F8662BBAE844"
          }
        ],
        "/Route53Stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/Route53Stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "Route53Stack"
    },
    "CognitoAuthStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "CognitoAuthStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "CognitoAuthStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://017522386375/ap-northeast-1",
      "properties": {
        "templateFile": "CognitoAuthStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-deploy-role-017522386375-ap-northeast-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-cfn-exec-role-017522386375-ap-northeast-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-017522386375-ap-northeast-1/ead4cd2b755b7bc481bcbbb44d7fed5def129f7ecc198eae217e5721763c9675.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "CognitoAuthStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-lookup-role-017522386375-ap-northeast-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "CognitoAuthStack.assets"
      ],
      "metadata": {
        "/CognitoAuthStack/UserPool/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserPool6BA7E5F2"
          }
        ],
        "/CognitoAuthStack/UserPoolClient/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserPoolClient2F5918F7"
          }
        ],
        "/CognitoAuthStack/UserPoolDomain/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserPoolDomain5479B217"
          }
        ],
        "/CognitoAuthStack/UserPoolId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserPoolId"
          }
        ],
        "/CognitoAuthStack/UserPoolClientId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserPoolClientId"
          }
        ],
        "/CognitoAuthStack/UserPoolDomainUrl": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserPoolDomainUrl"
          }
        ],
        "/CognitoAuthStack/Region": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Region"
          }
        ],
        "/CognitoAuthStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/CognitoAuthStack/Exports/Output{\"Fn::GetAtt\":[\"UserPool6BA7E5F2\",\"Arn\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttUserPool6BA7E5F2Arn686ACC00"
          }
        ],
        "/CognitoAuthStack/Exports/Output{\"Ref\":\"UserPool6BA7E5F2\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefUserPool6BA7E5F296FD7236"
          }
        ],
        "/CognitoAuthStack/Exports/Output{\"Ref\":\"UserPoolClient2F5918F7\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefUserPoolClient2F5918F753847A55"
          }
        ],
        "/CognitoAuthStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/CognitoAuthStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "CognitoAuthStack"
    },
    "EcsDjangoStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "EcsDjangoStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "EcsDjangoStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://017522386375/ap-northeast-1",
      "properties": {
        "templateFile": "EcsDjangoStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-deploy-role-017522386375-ap-northeast-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-cfn-exec-role-017522386375-ap-northeast-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-017522386375-ap-northeast-1/2dd9527e9983c58b14fdc06cdaae855929f433f8b54f85e57b35e0c8e049b1da.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "EcsDjangoStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::017522386375:role/cdk-hnb659fds-lookup-role-017522386375-ap-northeast-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "VpcStack",
        "CognitoAuthStack",
        "EcrStack",
        "Route53Stack",
        "EcsDjangoStack.assets"
      ],
      "metadata": {
        "/EcsDjangoStack/DjangoCluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoClusterF5CCF78E"
          }
        ],
        "/EcsDjangoStack/DjangoALB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoALBCAFDD2A3"
          }
        ],
        "/EcsDjangoStack/DjangoALB/DjangoListener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoALBDjangoListenerAAB3BC4D"
          }
        ],
        "/EcsDjangoStack/DjangoALB/DjangoListenerHTTPS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoALBDjangoListenerHTTPS06F692C4"
          }
        ],
        "/EcsDjangoStack/DjangoTargetGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoTargetGroup3F9AE780"
          }
        ],
        "/EcsDjangoStack/DjangoLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoLogGroup3D6AC872"
          }
        ],
        "/EcsDjangoStack/DjangoTaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoTaskRole5D017777"
          }
        ],
        "/EcsDjangoStack/DjangoTaskRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoTaskRoleDefaultPolicy89E51BB1"
          }
        ],
        "/EcsDjangoStack/DjangoExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoExecutionRoleBB5840A7"
          }
        ],
        "/EcsDjangoStack/DjangoExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoExecutionRoleDefaultPolicy61BB3186"
          }
        ],
        "/EcsDjangoStack/DjangoTaskDefinition/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoTaskDefinitionA1B68D68"
          }
        ],
        "/EcsDjangoStack/DjangoService": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/Users/imaishota/development/my/cognito/cdk/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1709)",
              "Annotations.addWarningV2 (/Users/imaishota/development/my/cognito/cdk/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/Users/imaishota/development/my/cognito/cdk/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8201)",
              "new FargateService2 (/Users/imaishota/development/my/cognito/cdk/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3888)",
              "new FargateService2 (/Users/imaishota/development/my/cognito/cdk/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "new EcsDjangoStack (/Users/imaishota/development/my/cognito/cdk/lib/ecs-django-stack.ts:201:20)",
              "Object.<anonymous> (/Users/imaishota/development/my/cognito/cdk/bin/cdk.ts:56:20)",
              "Module._compile (node:internal/modules/cjs/loader:1529:14)",
              "Module.m._compile (/Users/imaishota/development/my/cognito/cdk/node_modules/ts-node/src/index.ts:1618:23)",
              "Module._extensions..js (node:internal/modules/cjs/loader:1613:10)",
              "Object.require.extensions.<computed> [as .ts] (/Users/imaishota/development/my/cognito/cdk/node_modules/ts-node/src/index.ts:1621:12)",
              "Module.load (node:internal/modules/cjs/loader:1275:32)",
              "Function.Module._load (node:internal/modules/cjs/loader:1096:12)",
              "Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:164:12)",
              "phase4 (/Users/imaishota/development/my/cognito/cdk/node_modules/ts-node/src/bin.ts:649:14)",
              "bootstrap (/Users/imaishota/development/my/cognito/cdk/node_modules/ts-node/src/bin.ts:95:10)",
              "main (/Users/imaishota/development/my/cognito/cdk/node_modules/ts-node/src/bin.ts:55:10)",
              "Object.<anonymous> (/Users/imaishota/development/my/cognito/cdk/node_modules/ts-node/src/bin.ts:800:3)",
              "Module._compile (node:internal/modules/cjs/loader:1529:14)",
              "Object.Module._extensions..js (node:internal/modules/cjs/loader:1613:10)",
              "Module.load (node:internal/modules/cjs/loader:1275:32)",
              "Function.Module._load (node:internal/modules/cjs/loader:1096:12)",
              "Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:164:12)",
              "node:internal/main/run_main_module:28:49"
            ]
          }
        ],
        "/EcsDjangoStack/DjangoService/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoServiceD3AAF77D"
          }
        ],
        "/EcsDjangoStack/DjangoService/TaskCount/Target/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoServiceTaskCountTarget443B2910"
          }
        ],
        "/EcsDjangoStack/DjangoService/TaskCount/Target/DjangoCpuScaling/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoServiceTaskCountTargetDjangoCpuScalingBFDD3F4F"
          }
        ],
        "/EcsDjangoStack/DjangoService/TaskCount/Target/DjangoMemoryScaling/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoServiceTaskCountTargetDjangoMemoryScaling58F767AF"
          }
        ],
        "/EcsDjangoStack/DjangoAPIARecord/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DjangoAPIARecordFE4B1976"
          }
        ],
        "/EcsDjangoStack/LoadBalancerDNS": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LoadBalancerDNS"
          }
        ],
        "/EcsDjangoStack/LoadBalancerURL": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LoadBalancerURL"
          }
        ],
        "/EcsDjangoStack/ClusterName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterName"
          }
        ],
        "/EcsDjangoStack/ServiceName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceName"
          }
        ],
        "/EcsDjangoStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/EcsDjangoStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/EcsDjangoStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "EcsDjangoStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/core:enableStackNameDuplicates": {
            "recommendedValue": true,
            "explanation": "Allow multiple stacks with the same name"
          },
          "aws-cdk:enableDiffNoFail": {
            "recommendedValue": true,
            "explanation": "Make `cdk diff` not fail when there are differences"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD"
          },
          "@aws-cdk/core:stackRelativeExports": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path"
          },
          "@aws-cdk/aws-ecr-assets:dockerIgnoreSupport": {
            "recommendedValue": true,
            "explanation": "DockerImageAsset properly supports `.dockerignore` files by default"
          },
          "@aws-cdk/aws-secretsmanager:parseOwnedSecretName": {
            "recommendedValue": true,
            "explanation": "Fix the referencing of SecretsManager names from ARNs"
          },
          "@aws-cdk/aws-kms:defaultKeyPolicies": {
            "recommendedValue": true,
            "explanation": "Tighten default KMS key policies"
          },
          "@aws-cdk/aws-s3:grantWriteWithoutAcl": {
            "recommendedValue": true,
            "explanation": "Remove `PutObjectAcl` from Bucket.grantWrite"
          },
          "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": {
            "recommendedValue": true,
            "explanation": "Do not specify a default DesiredCount for ECS services"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK"
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently"
          },
          "@aws-cdk/aws-efs:defaultEncryptionAtRest": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have elastic file systems encrypted at rest by default."
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`."
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default."
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "userValue": [
              "aws",
              "aws-cn"
            ],
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy"
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis."
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy"
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role"
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1020.0"
}